---

#making sure ssh key exists on host
- name: Set authorized key taken from file
  ansible.posix.authorized_key:
    user: "{{ ansible_user}}"
    state: present
    key: "{{ lookup('file', '{{ ansible_ssh_public_key_path }}') }}"

# Passwordless sudo

- name: Make sure we have a 'wheel' group
  group:
    name: wheel
    state: present

- name: Allow 'wheel' group to have passwordless sudo
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: "^%wheel"
    line: "%wheel ALL=(ALL) NOPASSWD: ALL"
    validate: "visudo -cf %s"

- name: Add sudoers users to wheel group
  user:
    name="{{ ansible_user }}"
    groups=wheel
    state=present


# SSH hardening
- name: Disable SSH root login
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#PermitRootLogin'
    line: 'PermitRootLogin no'

- name: Disable SSH password authentication
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#PasswordAuthentication yes'
    line: 'PasswordAuthentication no'

- name: Setup alternate SSHd port
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^#Port'
    line: 'Port 4242'


#Disabling cloud init for it has done its work
- name: Ubuntu specific tasks
  become: yes
  block:
  - name: Remove cloud-config to avoid boot delay
    apt:
      name: cloud-config
      state: absent
  when: ansible_distribution == 'Ubuntu'

# Standard stuff
- name: Generate the locale
  locale_gen:
    name: "en_US.UTF-8"
    state: present

- name: Update and upgrade apt packages
  shell:
    cmd: apt update && apt upgrade -y

# Fail2ban
- name: Install fail2ban
  package:
    name: fail2ban
    state: present

- name: Ensure fail2ban is running and enabled on boot.
  service:
    name: fail2ban
    state: started
    enabled: true

# Automatic updates


- name: Install extra packages
  package:
    name: "{{ extra_packages }}"
    state: present

